시퀀스(sequence) : 데이터베이스에서 사용되는 객체, 일련의 숫자를 생성하는 데 주로 사용
고유한 값, 주로 기본키 또는 고유식별자 생성에 사용
예제 코드 : 
            create sequence 어떤값_id
            start with 1
            increament by 1
            nomaxvalue
            nocycle;

create sequence => 시퀀스를 생성하는 명령어
어떤값_id => 생성하려는 시퀀스의 이름을 지정 데이터 베이스에서 해당 시퀀스를 식별하는 데 사용
start with 1 : 시퀀스의 초기 시작값을 1로 설정
increament by 1 : 시퀀스의 각 값이 1씩 증가하도록 설정
nomaxvalue : 시퀀스가 최대값에 도달하지 않도록 설정
nocycle :  시퀀스가 최대값에 도달하면 다시 처음으로 돌아가지 않도록 설정

트리거(Trigger) : 데이터 베이스에서 발생하는 특정이벤트에 반응하여 자동으로 실행되는 SQL 코드 조각
                  데이터베이스의 상태를 감시하고 데이터 변경, 삽입, 업데이트 또는 삭제와 같은 작업을 행할 수 있음

예제코드 :
create or replace trigger 어떤값의_id
before insert on 테이블
for each row
begin
select 어떤값의_id_seq.nextval
into : new.어떤값의_id
from dual;

end;
/

create or replace trigger  => 트리거를 생성 또는 변경하는 명령
                or replace => 이미 동일한 이름의 토리거가 있는 경우 덮어쓰기를 허용
                어떤값의_id => 생성하려는 트리거의 이름 지정 데이터베이스에서 해당 트리거를 식별하는 데 사용
    before insert on 테이블 => 테이블에 행이 삽입되기 전에 실행
               for each row => 트리거가 각 행 별로 실행되도록 설정 트리거 내에서 현재 행을 참조할 수 있도록 함
               begin 및 end => 블록을 정의, 블록 내에서 틀리거나 수행할 작업를 정의할 수 있음 현재 행에 대한 작업을 수행하거나 다른 로직을 실행하는 데 사용
select 어떤값의_id_seq.nextval
into : new.어떤값의_id
from dual;

end;

==============================================================================================================================================
인덱스(idnex)
==============================================================================================================================================

인덱스(idnex)
데이터베이스 성능을 향상시키는 데 중요한 역할을 하는 데이터 구조
특정 열(컬럼)에 대한 검색 및 조회 작업을 최적화하기 위해 사용

예제 코드 : 
employee 테이블이 있다는 가정
create table em,ployee(
enployee_id NUBER(5) primary key,
name VARCHAR2(50),
hire_date

--인덱스 생성
create INDEX 생성해 놓은 인덱스 이름 ON 테이블
(어떤 열의 값을 기반으로 검색을 빠르게 하기 위해 작성하는 컬럼 이름);
create INDEX indx_employeetabl ON employee(name);

--인덱스를 사용한 select 예제문
select * from employee WHERE name = 'KH';=>효율적으로 검색 가능

* index는  B-TREE 구조로 되어있음.

B-TREE : 데이터를 저장하고 효율적으로 검색하는 데 사용되는 데이터 구조
Balanced Tree 주로 데이터 베이스 시스템, 파일 시스템, 디스크 관리, 파일구조 검색엔진 등 다양한 컴퓨팅 시스템에서 인덱싱에 사용


====================================================
pivot
====================================================
pivot : 데이터베이스 쿼리에서 사용되는 연산자 또는 기능
행 데이터를 열 데이터로 변환하는 작업을 수행
데이터를 행과 열 간을 변환하여 요약된 결과를 얻을 수 있음
데이터를 어떤 열 기준으로 피벗할 지 정의
데이터를 피봇한 다음에 결과집합을 새로운 열로 구성
각 고유한 값을 열이름이 되며 , 해당 값의 집계 결과가 해당 열에 배치
결과집합에는 기존 데이터의 행과 집계된 열이 포함

